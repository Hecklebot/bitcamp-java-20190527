/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.eomcs.lms;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class ServerApp {
  public static void main(String[] args) {
    System.out.println("[수업관리시스템 클라이언트 애플리케이션]");

    // 클라이언트의 연결을 처리할 객체준비
    // -> new ServerSocket(포트번호)
    // -> 포트번호란 클라이언트가 서버에 연결할 때, 사용할 사서함 번호
    // -> 사서함 번호는 한 컴퓨터에서 중복사용할 수 없다.
    // -> ServerSocket는 autocloseable 객체
    try (ServerSocket serverSocket = new ServerSocket(8888)) {
      System.out.println("서버 시작");
      
      // -> 클라이언트의 연결요청을 기다리다가
      //    요청이 들어오면 승인한 후, 연결정보를 리턴한다.
      try (Socket clientSocket = serverSocket.accept()) {
        System.out.println("클라이언트와 연결되었음");
      } catch (IOException e) { // try 블록을 벗어날 때, 클라이언트와 연결을 끊는다.
        e.printStackTrace();
      }
      System.out.println("클라이언트와 연결을 끊었음");
      
    } catch (IOException e) {
      // 예외가 발생하면 어디에서 예외가 발생했는지 정보를 모두 출력한다.
      e.printStackTrace();
    }
    
    System.out.println("서버 종료");
  }
}
