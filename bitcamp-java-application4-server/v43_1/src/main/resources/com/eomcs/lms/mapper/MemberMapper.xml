<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberDao">
  <!-- Mybatis가 컬럼값을 객체에 담을 때 컬럼 이름으로 setter를 찾아 호출한다. -->
  <!--
  <select id="findAll" resultType="com.eomcs.lms.domain.Member">
    select
      member_id, /* Member의 setMember_id(컬럼값)를 호출하여 컬럼값을 Member객체에 담는다. */
      conts, /* Member의 setConts(컬럼값) 호출 */
      cdt, /* Member의 setCdt(컬럼값) 호출 */
      vw_cnt /* Member의 SetVw_cnt(컬럼값) 호출 */
    from lms_member
    order by member_id desc
  </select>
  -->
  <!-- 만약 컬럼에 별명이 있다면 setter를 호출할 때도 그 별명과 일치하는 setter를 호출한다.
      컬럼의 이름과 setter의 이름이 다르다면 다음과 같이
    setter 이름과 같은 이름으로 별명을 부여하라
      그래야만 컬럼의 값을 객체에 제대로 담을 수 있다.
   -->
   <select id="findAll" resultType="com.eomcs.lms.domain.Member">
    select
      member_id as no,
      name,
      email,
      tel,
      cdt as registeredDate 
    from lms_member order by name asc
  </select>
  
  <select id="findBy" parameterType="int" resultType="com.eomcs.lms.domain.Member">
    select
      member_id as no, 
      name,
      email,
      pwd as password,
      photo,
      tel,
      cdt as registeredDate
    from lms_member
    where member_id=#{no}
  </select>
  
  <select id="findByKeyword" parameterType = "String" resultType="com.eomcs.lms.domain.Member">
    select 
      member_id no,
      name,
      email,
      tel,
      cdt registeredDate
    from lms_member
    where name like concat('%', #{value}, '%')
      or email like concat('%', #{value}, '%')
      or tel like concat('%', #{value}, '%')
    order by name asc
  </select>
  
  <insert id="insert" parameterType="com.eomcs.lms.domain.Member">
    insert into lms_member(name,email,pwd,cdt,tel,photo)
    values(#{name},
    #{email},
    password(pwd=#{password}),
    #{registeredDate},
    #{tel},
    #{photo})  
    </insert>
  
  <update id="update" parameterType="com.eomcs.lms.domain.Member">
    update lms_member set
      name=#{name},
      email=#{email},
      pwd=password(#{password}),
      tel=#{tel},
      photo=#{photo}
    where member_id=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from lms_member where member_id=#{no}
  </delete>
  
  <select id="findByEmailPassword" parameterType="com.eomcs.lms.domain.Member" 
          resultType="com.eomcs.lms.domain.Member">
    select 
      member_id no,
      name,
      email,
      tel,
      cdt registeredDate
    from lms_member
    where email=#{email} and pwd=password(#{password})
  </select>
  

</mapper>